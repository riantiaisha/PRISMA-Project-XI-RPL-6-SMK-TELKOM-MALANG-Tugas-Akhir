// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  UserId         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  role       Role  @default(admin) // e.g., "customer" atau "admin"
  rentals    Rental[] // Hubungan dengan Rental
  createdAt  DateTime @default(now())
  review     Review[]
}

model Camera {
  CameraId          Int      @id @default(autoincrement()) 
  name        String
  brand       String
  pricePerDay Float    // Harga sewa per hari
  status      String   // e.g., "available", "rented"
  description String
  rentals     Rental[] // Hubungan dengan Rental
  reviews     Review[] // Hubungan dengan Review
  createdAt   DateTime @default(now())
}

model Rental {
  RentalId            Int       @id @default(autoincrement())
  userId        Int
  cameraId      Int
  startDate     DateTime  // Tanggal penyewaan
  endDate       DateTime  // Tanggal pengembalian
  totalAmount   Float     // Total harga sewa
  status        String    // e.g., "ongoing", "completed"
  user          User      @relation(fields: [userId], references: [UserId])
  camera        Camera    @relation(fields: [cameraId], references: [CameraId])
  payment       Payment[]
  createdAt     DateTime  @default(now())
}

model Payment {
  PaymentId          Int       @id @default(autoincrement())
  rentalId    Int
  amount      Float     // Jumlah pembayaran
  paymentDate DateTime  // Tanggal pembayaran
  method      String    // Metode pembayaran, e.g., "credit card", "cash"
  status      String    // e.g., "paid", "unpaid"
  rental      Rental    @relation(fields: [rentalId], references: [RentalId])
}

model Review {
  ReviewId        Int      @id @default(autoincrement())
  cameraId  Int
  userId    Int
  rating    Int      // Nilai rating, misalnya 1-5
  comment   String?  // Ulasan teks
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [UserId])
  camera    Camera   @relation(fields: [cameraId], references: [CameraId])
}

enum Role{
  admin
  customer
}